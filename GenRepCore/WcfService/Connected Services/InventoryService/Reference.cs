//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     //
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace InventoryService
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "0.5.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Customer", Namespace="http://schemas.datacontract.org/2004/07/InventoryService.Models")]
    public partial class Customer : object
    {
        
        private string Address1Field;
        
        private string Address2Field;
        
        private string CountryField;
        
        private string EmailField;
        
        private string FNameField;
        
        private int IdField;
        
        private string LNameField;
        
        private string PhoneField;
        
        private string StateField;
        
        private string ZipcodeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address1
        {
            get
            {
                return this.Address1Field;
            }
            set
            {
                this.Address1Field = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address2
        {
            get
            {
                return this.Address2Field;
            }
            set
            {
                this.Address2Field = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Country
        {
            get
            {
                return this.CountryField;
            }
            set
            {
                this.CountryField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email
        {
            get
            {
                return this.EmailField;
            }
            set
            {
                this.EmailField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FName
        {
            get
            {
                return this.FNameField;
            }
            set
            {
                this.FNameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                this.IdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LName
        {
            get
            {
                return this.LNameField;
            }
            set
            {
                this.LNameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone
        {
            get
            {
                return this.PhoneField;
            }
            set
            {
                this.PhoneField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string State
        {
            get
            {
                return this.StateField;
            }
            set
            {
                this.StateField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Zipcode
        {
            get
            {
                return this.ZipcodeField;
            }
            set
            {
                this.ZipcodeField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "0.5.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="InventoryService.IInventoryService")]
    public interface IInventoryService
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetCustomers", ReplyAction="http://tempuri.org/IInventoryService/GetCustomersResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<InventoryService.Customer>> GetCustomersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetCustomerById", ReplyAction="http://tempuri.org/IInventoryService/GetCustomerByIdResponse")]
        System.Threading.Tasks.Task<InventoryService.Customer> GetCustomerByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/AddCustomer", ReplyAction="http://tempuri.org/IInventoryService/AddCustomerResponse")]
        System.Threading.Tasks.Task<string> AddCustomerAsync(InventoryService.Customer customer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/UpdateCustomer", ReplyAction="http://tempuri.org/IInventoryService/UpdateCustomerResponse")]
        System.Threading.Tasks.Task<string> UpdateCustomerAsync(int id, InventoryService.Customer customer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/DeleteCustomer", ReplyAction="http://tempuri.org/IInventoryService/DeleteCustomerResponse")]
        System.Threading.Tasks.Task<string> DeleteCustomerAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "0.5.0.0")]
    public interface IInventoryServiceChannel : InventoryService.IInventoryService, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "0.5.0.0")]
    public partial class InventoryServiceClient : System.ServiceModel.ClientBase<InventoryService.IInventoryService>, InventoryService.IInventoryService
    {
        
    /// <summary>
    /// Implement this partial method to configure the service endpoint.
    /// </summary>
    /// <param name="serviceEndpoint">The endpoint to configure</param>
    /// <param name="clientCredentials">The client credentials</param>
    static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public InventoryServiceClient() : 
                base(InventoryServiceClient.GetDefaultBinding(), InventoryServiceClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.BasicHttpBinding_IInventoryService.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public InventoryServiceClient(EndpointConfiguration endpointConfiguration) : 
                base(InventoryServiceClient.GetBindingForEndpoint(endpointConfiguration), InventoryServiceClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public InventoryServiceClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(InventoryServiceClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public InventoryServiceClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(InventoryServiceClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public InventoryServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<InventoryService.Customer>> GetCustomersAsync()
        {
            return base.Channel.GetCustomersAsync();
        }
        
        public System.Threading.Tasks.Task<InventoryService.Customer> GetCustomerByIdAsync(int id)
        {
            return base.Channel.GetCustomerByIdAsync(id);
        }
        
        public System.Threading.Tasks.Task<string> AddCustomerAsync(InventoryService.Customer customer)
        {
            return base.Channel.AddCustomerAsync(customer);
        }
        
        public System.Threading.Tasks.Task<string> UpdateCustomerAsync(int id, InventoryService.Customer customer)
        {
            return base.Channel.UpdateCustomerAsync(id, customer);
        }
        
        public System.Threading.Tasks.Task<string> DeleteCustomerAsync(int id)
        {
            return base.Channel.DeleteCustomerAsync(id);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IInventoryService))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IInventoryService))
            {
                return new System.ServiceModel.EndpointAddress("http://localhost:65063/InventoryService.svc");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return InventoryServiceClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_IInventoryService);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return InventoryServiceClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_IInventoryService);
        }
        
        public enum EndpointConfiguration
        {
            
            BasicHttpBinding_IInventoryService,
        }
    }
}
